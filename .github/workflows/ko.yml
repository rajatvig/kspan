---
name: Ko

on: [push, pull_request, create]  # create is for tags

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.19

    - name: Lint
      uses: golangci/golangci-lint-action@v2
      with:
          version: latest
          args: --timeout=5m

    - name: Controller Gen
      run: make tools/bin/controller-gen

    - name: Build
      run: make

    - name: Test
      run: make test

    - name: Install ko
      run: |
        # go install github.com/google/ko@latest
        curl -sL https://github.com/google/ko/releases/download/v0.8.3/ko_0.8.3_Linux_x86_64.tar.gz | tar -xzv ko || true
        ./ko version # check that it installed; if not, this step will fail

    - name: Set tags
      id: tags
      run: |
        set -euo pipefail
        set -x
        TAGS="latest,${{ github.sha }}"
        github_tag="$(echo ${{ github.ref }} | sed -n '/refs\/tags\//p' | sed 's|refs/tags/||')"
        if [[ "${github_tag}" != "" ]]; then
          TAGS="${TAGS},${github_tag}"
        fi
        echo "::set-output name=tags::$TAGS"

    - name: Build docker image
      run: |
        ./ko publish \
        --local \
        --base-import-paths \
        --tags ${{ steps.tags.outputs.tags }} \
        --platform=linux/amd64,linux/arm64 \
        .

    - name: Log in to the Container registry
      if: startsWith( github.ref, 'refs/tags/' )
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push docker image if this build was triggered by a tag
      if: startsWith( github.ref, 'refs/tags/' )
      run: |
        KO_DOCKER_REPO=ghcr.io/${{ github.repository_owner }} \
        ./ko publish \
        --base-import-paths \
        --tags ${{ steps.tags.outputs.tags }} \
        --platform=linux/amd64,linux/arm64 \
        .
